AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

##########################################################################
#  Parameters                                                            #
##########################################################################
Parameters:
  StageName:
    Description: The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway
    Type: String
    Default: dev

##########################################################################
#  Global values that are applied to all resources                       #
##########################################################################
Globals:
  Function:
    MemorySize: 1024
    Architectures: ["arm64"]
    Handler: bootstrap
    Runtime: provided.al2
    Timeout: 29
    Environment:
      Variables:
        RUST_BACKTRACE: 1
        RUST_LOG: info

Resources:
##########################################################################
#  API Gateway HTTP API                                                  #
# ##########################################################################
  AccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/${AWS::StackName}/APIAccessLogs"

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      AccessLogSettings:
        DestinationArn: !GetAtt AccessLogs.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "integrationStatus": $context.integrationStatus, "integrationLatency": $context.integrationLatency, "responseLength":"$context.responseLength" }'
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST

##########################################################################
#   Lambda Function                                                      #
##########################################################################
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../build/handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource:
                - !ImportValue SourceBucketArn
                - !Sub
                  - "${SourceBucketArn}/*"
                  - SourceBucketArn: !ImportValue SourceBucketArn
      Environment:
        Variables:
          BUCKET_NAME: !ImportValue SourceBucketName
      Events:
        AllEvents:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /countrycode
            Method: GET
      Tags:
        Name: !Ref AWS::StackName

Outputs:
  HttpApiEndpoint:
    Description: The geoip endpoint.
    Value: !GetAtt HttpApi.ApiEndpoint